---
layout: post
title:  "JVM DVM ART"
date:   2021-12-03 17:00:00 +0900
category: Android
---

# JVM DVM ART

## JVM

### JVM이란?

- 자바 바이트 코드를 실행할 수 있는 주체
- 자바 바이트 코드는 플랫폼에 독립적이며 JVM 의존적으로 실행된다
- 플랫폼에 맞춰 소스코드를 빌드할 필요없이 한번의 빌드로 여러 플랫폼에서 실행할 수 있다

<img src="http://snowchori.github.io/assets/img/jvm.png">

### JVM의 특성

- 스택 기반의 가상 머신
- 단일 상속형태의 객체 지향 프로그래밍을 가상 머신 수준에서 구현
- 포인터를 지원하되 C와 같이 주소 값을 임의로 조작이 가능한 포인터 연산이 불가능
- 가비지 컬렉션 사용
- 모든 기본 타입의 정의를 명확히 함으로써플랫폼 독립성 보장
- 데이터 흐름 분석에 기반한 자바 바이트 코드 검증기를 통해 많은 문제를 실행 전에
  검증하여 실행 시 안전을 보장하고 별도의 부담을 줄여줌

## DVM

### DVM이란?

- 안드로이드 애플리케이션을 실행할 수 있는 가상머신
- 모바일 기기 환경에 맞게 최적화되어 나온 가상머신
- JIT(Just In Time) 컴파일러를 사용
- 최초 앱 실행 시 자바코드 일부를 한꺼번에 변환 후 RAM에 올려서 사용(매번 필요한 부분만 컴파일)
- JIT 컴파일러가 실행되는 동안 하드웨어 부하 증가
- 배터리 소모량이 커짐, 애플리케이션 실행 시 RAM에 상주되어야 하기에 RAM 사용량 증가

### JIT

- 앱 실행 시 컴파일
- 설치 시 컴파일을 하지 않기 때문에 AOT보다 설치 속도 빠름
- 실행 시 컴파일을 하기 때문에 AOT에 비해 실행 속도 느림
- 용량 작음

## ART

### ART란?

- 안드로이드 애플리케이션 런타임 환경으로 새로운 디버깅 기능과 좀 더 정확한
  고수준의 애플리케이션 프로파일링 기능을 제공
- AOT(Ahead Of Time) 컴파일러를 사용
- 앱 설치 시 컴파일하여 바이트 코드 생성(앱 실행 시 읽어들임)
- 설치 공간이 달빅에 비해 1.5 ~ 2배 필요, 애플리 케이션 설치 시간 증가

### AOT

- 앱 설치 시 컴파일
- 설치 시 컴파일을 완료하기 때문에 JIT에 비해 설치 속도 느림
- 실행 시 컴파일을 하기 않기 때문에 JIT에 비해 실행 속도 빠름
- 용량 큼 (JIT에서 실행 시 컴파일하는 것을 미리 컴파일하여 가지고 있기 때문)

### [참고]
<https://www.charlezz.com/?p=42686> <br>
<https://skytitan.tistory.com/21> <br>
<https://brunch.co.kr/@mystoryg/81>