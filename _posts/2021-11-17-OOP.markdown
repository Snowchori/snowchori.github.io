---
layout: post
title:  "Object-Oriented Programming"
date:   2021-11-17 16:00:00 +0900
category: CS
---

# 객체 지향 프로그래밍

## 객체 지향 프로그래밍이란?

프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고
그 객체들 간의 유기적인 상호작용을 통해 로직을 구성하는 프로그래밍 방법

## 기본 구성 요소

- 클래스
  * 같은 종류의 집단에 속하는 속성과 행위를 정의한 것으로 객체지향 프로그램의
    기본적인 사용자 정의 데이터형이라고 할 수 있다
  * 클래스는 다른 클래스 또는 외부 요소와 독립적으로 디자인하여야 한다
- 객체
  * 클래스의 인스턴스(실제로 메모리상에 할당된 것)
  * 객체는 자신 고유의 속성을 가지며 클래스에서 정의한 행위를 수행할 수 있다
  * 객체의 행위는 클래스에 정의된 행위에 대한 정의를 공유함으로써 메모리를
    경제적으로 사용한다
- 메서드, 메시지
  * 클래스로부터 생성된 객체를 사용하는 방법으로서 객체에 명령을 내리는 메시지
  * 메서드는 한 객체의 서브루틴 형태로 객체의 속성을 조작하는 데 사용된다
  * 객체 간의 통신은 메시지를 통해 이루어진다

## 특징

- 자료 추상화
  * 불필요한 정보는 숨기고 중요한 정보만을 표현함으로써 프로그램을 간단히 만드는 것
  * 공통의 속성이나 기능을 묶어 이름을 붙이는 것
- 상속
  * 새로운 클래스가 기존의 클래스의 자료와 연산을 이용할 수 있게 하는 기능
  * 상속을 통해서 기존의 클래스를 상속받은 하위 클래스를 이용해 프로그램의 요구에 맞추어
    클래스를 수정할 수 있고 클래스 간의 종속 관계를 형성함으로써 객체를 조직화할 수 있다
- 다중 상속
  * 클래스가 2개 이상의 클래스로부터 상속받을 수 있게 하는 기능
  * 클래스들의 기능이 동시에 필요할 때 용이하나 클래스의 상속 관계에 혼란을 줄 수 있고
    프로그래밍 언어에 따라 사용 가능 유무가 다르므로 주의해서 사용해야 한다
- 다형성
  * 하나의 변수명, 함수명 등이 상황에 다라 다른 의미로 해석될 수 있는 것
  * 오버라이딩 : 부모클래스의 메서드와 같은 이름, 매개변수를 재정의 하는 것
  * 오버로딩 : 같은 이름의 함수를 여러개 정의하고, 매개변수의 타입과 개수를 다르게 하여
    매개변수에 따라 다르게 호출할 수 있게 하는 것
- 동적 바인딩
  * 실행 시간 중에 일어나거나 실행 과정에서 변경될 수 있는 바인딩
  * 프로그램의 한 개체나 기호를 실행 과정에 여러 속성이나 연산에 바인딩함으로써 다형 개념을 실현
  
## 장단점

- 장점
  * 코드 재사용이 용이
  * 유지보수가 쉽다
  * 대형 프로젝트에 적합
- 단점
  * 처리 속도가 상대적으로 느림
  * 객체가 많으면 용량이 커질 수 있다
  * 설계시 많은 시간과 노력이 필요하다

### [참고]
<https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D> <br>
<https://jeong-pro.tistory.com/95?category=793347>